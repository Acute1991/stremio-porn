{"version":3,"sources":["../../src/adapters/SpankWire.js"],"names":["SpankWire","HubTrafficAdapter","_makeMethodUrl","method","_makeEmbedUrl","id","_extractStreamsFromEmbed","body","urlRegexp","urlMatches","match","length","Error","map","item","url","replace","qualityMatch","quality","toUpperCase","slice","toLowerCase"],"mappings":";;;;;;;AAAA;;;;;;AAGA,MAAMA,SAAN,SAAwBC,0BAAxB,CAA0C;AAIxCC,iBAAeC,MAAf,EAAuB;AACrB,WAAQ,wDAAuDA,MAAO,EAAtE;AACD;;AAEDC,gBAAcC,EAAd,EAAkB;AAChB,WAAQ,wDAAuDA,EAAG,EAAlE;AACD;;AAEDC,2BAAyBC,IAAzB,EAA+B;AAC7B;AACA;AACA;AACA;AACA;;AACA;AAEA,QAAIC,YAAY,iDAAhB;AACA,QAAIC,aAAaF,KAAKG,KAAL,CAAWF,SAAX,CAAjB;;AAEA,QAAI,CAACC,UAAD,IAAe,CAACA,WAAWE,MAA/B,EAAuC;AACrC,YAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AAED,WAAOH,WAAWI,GAAX,CAAgBC,IAAD,IAAU;AAC9B,UAAIC,MAAMD,KACPJ,KADO,CACD,qBADC,EACsB,CADtB,EACyB;AADzB,OAEPM,OAFO,CAEC,KAFD,EAEQ,EAFR,CAAV,CAD8B,CAGR;;AAEtB,UAAID,IAAI,CAAJ,MAAW,GAAf,EAAoB;AAClBA,cAAO,SAAQA,GAAI,EAAnB;AACD,OAP6B,CAS9B;;;AACA,UAAIE,eAAeF,IAAIL,KAAJ,CAAU,wCAAV,CAAnB;AACA,UAAIQ,OAAJ;;AAEA,UAAID,gBAAgBA,aAAa,CAAb,CAApB,EAAqC;AACnCC,kBAAUD,aAAa,CAAb,CAAV;AACAC,kBAAUA,QAAQ,CAAR,EAAWC,WAAX,KAA2BD,QAAQE,KAAR,CAAc,CAAd,EAAiBC,WAAjB,EAArC;AACD;;AAED,aAAO;AAAEN,WAAF;AAAOG;AAAP,OAAP;AACD,KAnBM,CAAP;AAoBD;;AA/CuC;;gCAApClB,S,kBACkB,W,qBACE,E;;eAiDXA,S","sourcesContent":["import HubTrafficAdapter from './HubTrafficAdapter'\n\n\nclass SpankWire extends HubTrafficAdapter {\n  static DISPLAY_NAME = 'SpankWire'\n  static ITEMS_PER_PAGE = 20\n\n  _makeMethodUrl(method) {\n    return `https://www.spankwire.com/api/HubTrafficApiCall?data=${method}`\n  }\n\n  _makeEmbedUrl(id) {\n    return `https://www.spankwire.com/EmbedPlayer.aspx?ArticleId=${id}`\n  }\n\n  _extractStreamsFromEmbed(body) {\n    /* eslint-disable max-len */\n    // URL examples:\n    // \\/\\/cdn1-embed-spankwire.spankcdn.net\\/201505\\/13\\/1812784\\/180P_200k_1812784.mp4?validfrom=1524836136&validto=1524843336&rate=45k&burst=450k&hash=djplLdzje8I9RZWDeUa8EtjK4mw%3D\n    // \\/\\/cdn1-embed-extremetube.spankcdn.net\\/media\\/\\/201804\\/29\\/24260991\\/mp4_720p_24260991.mp4?validfrom=1524996113&validto=1525003313&rate=141k&burst=2000k&hash=8lag09lM%2BHc%2F%2Frgi4Kcc6gObcr4%3D\n    // \\/\\/cdn1-embed-extremetube.spankcdn.net\\/media\\/\\/201804\\/29\\/24260991\\/mp4_normal_24260991.mp4?validfrom=1524996113&validto=1525003313&rate=34k&burst=2000k&hash=d3lzXN0Tx0e9%2BId7wp%2Bf1T8Momo%3D\n    /* eslint-enable max-len */\n\n    let urlRegexp = /playerData.cdnPath\\d+\\s*=\\s*[\"']?[^\"'\\s]+[\"']/gi\n    let urlMatches = body.match(urlRegexp)\n\n    if (!urlMatches || !urlMatches.length) {\n      throw new Error('Unable to extract streams from an embed page')\n    }\n\n    return urlMatches.map((item) => {\n      let url = item\n        .match(/[\"']([^\"'\\s]+)[\"']/i)[1] // Extract the URL\n        .replace(/\\\\/g, '') // Remove backslashes\n\n      if (url[0] === '/') {\n        url = `https:${url}`\n      }\n\n      // Two possible quality formats: \"720p\" and \"high\"\n      let qualityMatch = url.match(/\\/(mp4_)?(\\d+p|low|normal|high|ultra)/i)\n      let quality\n\n      if (qualityMatch && qualityMatch[2]) {\n        quality = qualityMatch[2]\n        quality = quality[0].toUpperCase() + quality.slice(1).toLowerCase()\n      }\n\n      return { url, quality }\n    })\n  }\n}\n\n\nexport default SpankWire\n"],"file":"SpankWire.js"}