{"version":3,"sources":["../../src/adapters/PornHub.js"],"names":["PornHub","HubTrafficAdapter","_makeMethodUrl","method","methodAliases","searchVideos","getVideoById","_makeEmbedUrl","id","_extractStreamsFromEmbed","body","regexp","urlMatches","exec","Error","url","replace"],"mappings":";;;;;;;AAAA;;;;;;AAGA,MAAMA,OAAN,SAAsBC,0BAAtB,CAAwC;AAKtCC,iBAAeC,MAAf,EAAuB;AACrB,QAAIC,gBAAgB;AAClBC,oBAAc,QADI;AAElBC,oBAAc;AAFI,KAApB;AAIA,WAAQ,sCAAqCF,cAAcD,MAAd,CAAsB,EAAnE;AACD;;AAEDI,gBAAcC,EAAd,EAAkB;AAChB,WAAQ,iCAAgCA,EAAG,EAA3C;AACD;;AAEDC,2BAAyBC,IAAzB,EAA+B;AAC7B;AACA;AACA;AACA,QAAIC,SAAS,yEAAb;AACA;;AACA,QAAIC,aAAaD,OAAOE,IAAP,CAAYH,IAAZ,CAAjB;;AAEA,QAAI,CAACE,UAAD,IAAe,CAACA,WAAW,CAAX,CAApB,EAAmC;AACjC,YAAM,IAAIE,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAED,QAAIC,MAAMH,WAAW,CAAX,EACPI,OADO,CACC,SADD,EACY,GADZ,EACiB;AADjB,KAEPA,OAFO,CAEC,aAFD,EAEgB,KAFhB,CAAV,CAZ6B,CAcI;;AAEjC,QAAID,IAAI,CAAJ,MAAW,GAAf,EAAoB;AAClBA,YAAO,UAASA,GAAI,EAApB;AACD;;AAED,WAAO,CAAC;AAAEA;AAAF,KAAD,CAAP;AACD;;AAtCqC;;gDAAlCf,O,kBACkB,S,qBACE,E,yBACI,I;;eAuCfA,O","sourcesContent":["import HubTrafficAdapter from './HubTrafficAdapter'\n\n\nclass PornHub extends HubTrafficAdapter {\n  static DISPLAY_NAME = 'PornHub'\n  static ITEMS_PER_PAGE = 30\n  static VIDEO_ID_PARAMETER = 'id'\n\n  _makeMethodUrl(method) {\n    let methodAliases = {\n      searchVideos: 'search',\n      getVideoById: 'video_by_id',\n    }\n    return `https://www.pornhub.com/webmasters/${methodAliases[method]}`\n  }\n\n  _makeEmbedUrl(id) {\n    return `https://www.pornhub.com/embed/${id}`\n  }\n\n  _extractStreamsFromEmbed(body) {\n    /* eslint-disable max-len */\n    // URL example:\n    // https:\\/\\/de.phncdn.com\\/videos\\/201503\\/28\\/46795732\\/vl_480_493k_46795732.mp4?ttl=1522227092&ri=1228800&rs=696&hash=268b5f4d76927209ef554ac9e93c6c85\n    let regexp = /videoUrl[\"']?\\s*:\\s*[\"']?(https?:\\\\?\\/\\\\?\\/[a-z]+\\.phncdn\\.com[^\"']+)/gi\n    /* eslint-enable max-len */\n    let urlMatches = regexp.exec(body)\n\n    if (!urlMatches || !urlMatches[1]) {\n      throw new Error('Unable to extract a stream URL from an embed page')\n    }\n\n    let url = urlMatches[1]\n      .replace(/[\\\\/]+/g, '/') // Normalize the slashes...\n      .replace(/(https?:\\/)/, '$1/') // ...but keep the // after \"https:\"\n\n    if (url[0] === '/') {\n      url = `https:/${url}`\n    }\n\n    return [{ url }]\n  }\n}\n\n\nexport default PornHub\n"],"file":"PornHub.js"}